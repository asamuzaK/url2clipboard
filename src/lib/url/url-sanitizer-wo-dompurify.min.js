var{FileReader:T}=window,ve=new T;var y=t=>Object.prototype.toString.call(t).slice(8,-1),d=t=>typeof t=="string"||t instanceof String;var{DOMPurify:P}=window;var z=[7,8,9,10,11,12,13,27,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255];var H=["aaa","aaas","about","acap","acct","acd","acr","adiumxtra","adt","afp","afs","aim","amss","android","appdata","apt","ar","ark","attachment","aw","barion","beshare","bitcoin","bitcoincash","blob","bolo","browserext","cabal","calculator","callto","cap","cast","casts","chrome","chrome-extension","cid","coap","coaps","com-eventbrite-attendee","content","content-type","crid","cstr","cvs","dab","dat","data","dav","diaspora","dict","did","dis","dlna-playcontainer","dlna-playsingle","dns","dntp","doi","dpp","drm","dtmi","dtn","dvb","dvx","dweb","ed2k","eid","elsi","embedded","ens","ethereum","example","facetime","feed","feedready","fido","file","finger","first-run-pen-experience","fish","fm","ftp","fuchsia-pkg","geo","gg","git","gitoid","gizmoproject","go","gopher","graph","gtalk","h323","ham","hcap","hcp","http","https","hxxp","hxxps","hydrazone","hyper","iax","icap","icon","im","imap","info","iotdisco","ipfs","ipn","ipns","ipp","ipps","irc","irc6","ircs","iris","iris.beep","iris.lwz","iris.xpc","iris.xpcs","isostore","itms","jabber","jar","jms","keyparc","lastfm","lbry","ldap","ldaps","leaptofrogans","lorawan","lpa","lvlt","magnet","mailto","maps","market","matrix","message","microsoft.windows.camera","microsoft.windows.camera.multipicker","microsoft.windows.camera.picker","mid","mms","mongodb","moz","moz-extension","ms-access","ms-appinstaller","ms-browser-extension","ms-calculator","ms-drive-to","ms-enrollment","ms-excel","ms-eyecontrolspeech","ms-gamebarservices","ms-gamingoverlay","ms-getoffice","ms-help","ms-infopath","ms-inputapp","ms-lockscreencomponent-config","ms-media-stream-id","ms-meetnow","ms-mixedrealitycapture","ms-mobileplans","ms-newsandinterests","ms-officeapp","ms-people","ms-powerpoint","ms-project","ms-publisher","ms-remotedesktop-launch","ms-restoretabcompanion","ms-screenclip","ms-screensketch","ms-search","ms-search-repair","ms-secondary-screen-controller","ms-secondary-screen-setup","ms-settings","ms-settings-airplanemode","ms-settings-bluetooth","ms-settings-camera","ms-settings-cellular","ms-settings-cloudstorage","ms-settings-connectabledevices","ms-settings-displays-topology","ms-settings-emailandaccounts","ms-settings-language","ms-settings-location","ms-settings-lock","ms-settings-nfctransactions","ms-settings-notifications","ms-settings-power","ms-settings-privacy","ms-settings-proximity","ms-settings-screenrotation","ms-settings-wifi","ms-settings-workplace","ms-spd","ms-stickers","ms-sttoverlay","ms-transit-to","ms-useractivityset","ms-virtualtouchpad","ms-visio","ms-walk-to","ms-whiteboard","ms-whiteboard-cmd","ms-word","msnim","msrp","msrps","mss","mt","mtqp","mumble","mupdate","mvn","news","nfs","ni","nih","nntp","notes","num","ocf","oid","onenote","onenote-cmd","opaquelocktoken","openpgp4fpr","otpauth","palm","paparazzi","payment","payto","pkcs11","platform","pop","pres","proxy","psyc","pttp","pwid","qb","query","quic-transport","redis","rediss","reload","res","resource","rmi","rsync","rtmfp","rtmp","rtsp","rtsps","rtspu","sarif","secondlife","secret-token","service","session","sftp","sgn","shc","sieve","simpleledger","simplex","sip","sips","skype","smb","smp","sms","smtp","snmp","soap.beep","soap.beeps","soldat","spiffe","spotify","ssb","ssh","starknet","steam","stun","stuns","submit","svn","swh","swid","swidpath","tag","taler","teamspeak","tel","teliaeid","telnet","tftp","things","thismessage","tip","tn3270","tool","turn","turns","tv","udp","unreal","urn","ut2004","uuid-in-package","v-event","vemmi","ventrilo","ves","view-source","vnc","vscode","vscode-insiders","vsls","w3","wcr","web3","webcal","wifi","ws","wss","wtai","wyciwyg","xcon","xcon-userid","xfire","xmlrpc.beep","xmlrpc.beeps","xmpp","xri","ymsgr","z39.50r","z39.50s"];var R=16,W=/^[\da-z+/\-_=]+$/i,k=/data:[^,]*,/,F=/data:[^,]*;?base64,[\da-z+/\-_=]+/i,Z=/data:[^,]*,[^"]+/g,A=/:$/,ee=/(?:#|%23)$/,te=/(?<!(?:#|%23).*)(?:\?|%3F)$/,se=/[<>"'\s]/g,re=/%(?:2(?:2|7)|3(?:C|E))/g,B=/%(?:2(?:2|7)|3(?:C|E))+?/,ie=/^(?:text\/(?:ht|x)ml|application\/(?:xhtml\+)?xml|image\/svg\+xml)/,ae=/^\d+/,oe=/#x?$/,ne=/^#(?:x(?:00)?[2-7]|\d)/,ce=/^x[\dA-F]+/i,pe=/&#(x(?:00)?[\dA-F]{2}|0?\d{1,3});?/ig,le=/^[a-z][\da-z+\-.]*$/,me=/^(?:ext|web)\+[a-z]+$/,q=/(?:java|vb)script/,D=/(?:java|vb)script|blob/,de=/^%[\dA-F]{2}$/i,fe=/%26/g,G=t=>{if(!d(t))throw new TypeError(`Expected String but got ${y(t)}.`);let e=[];for(let s of t)e.push(`%${s.charCodeAt(0).toString(R).toUpperCase()}`);return e.join("")},Y=t=>{d(t)&&de.test(t)&&(t=t.toUpperCase());let[e,s,a,i,o,c]=["&","#","<",">",'"',"'"].map(G),r;return t===e?r=`${e}amp;`:t===a?r=`${e}lt;`:t===i?r=`${e}gt;`:t===o?r=`${e}quot;`:t===c?r=`${e}${s}39;`:r=t,r},he=t=>{if(d(t)){if(!W.test(t))throw new Error(`Invalid base64 data: ${t}`)}else throw new TypeError(`Expected String but got ${y(t)}.`);let e=atob(t),s=Uint8Array.from([...e].map(o=>o.charCodeAt(0))),a=new Set(z),i;return s.every(o=>a.has(o))?i=e.replace(/\s/g,G):i=t,i},X=(t,e=0)=>{if(!d(t))throw new TypeError(`Expected String but got ${y(t)}.`);if(Number.isInteger(e)){if(e>R)throw new Error("Character references nested too deeply.")}else throw new TypeError(`Expected Number but got ${y(e)}.`);let s=decodeURIComponent(t);if(/&#/.test(s)){let a=new Set(z),i=[...s.matchAll(pe)].reverse();for(let o of i){let[c,r]=o,l;if(ce.test(r)?l=parseInt(`0${r}`,R):ae.test(r)&&(l=parseInt(r)),Number.isInteger(l)){let{index:f}=o,[p,n]=[s.substring(0,f),s.substring(f+c.length)];a.has(l)?(s=`${p}${String.fromCharCode(l)}${n}`,(oe.test(p)||ne.test(n))&&(s=X(s,++e))):l<R*R&&(s=`${p}${n}`)}}}return s},ue=t=>new Promise((e,s)=>{let a=new T;a.addEventListener("error",()=>s(a.error)),a.addEventListener("abort",()=>e(a.result)),a.addEventListener("load",()=>e(a.result)),a.readAsDataURL(t)}),j=class{#e;constructor(){this.#e=new Set(H)}get(){return[...this.#e]}has(e){return this.#e.has(e)}add(e){if(d(e)){if(q.test(e)||!le.test(e))throw new Error(`Invalid scheme: ${e}`)}else throw new TypeError(`Expected String but got ${y(e)}.`);return this.#e.add(e),[...this.#e]}remove(e){return this.#e.delete(e)}verify(e){let s;if(d(e))try{let{protocol:a}=new URL(e),i=a.replace(A,""),o=i.split("+");s=!q.test(i)&&me.test(i)||o.every(c=>this.#e.has(c))}catch{s=!1}return!!s}},M=class extends j{#e;#t;constructor(){super(),this.#e=0,this.#t=new Set}replace(e){if(!d(e))throw new TypeError(`Expected String but got ${y(e)}.`);let s=e;if(k.test(s)){let i=[...s.matchAll(Z)].reverse();for(let o of i){let[c]=o;F.test(c)&&([c]=F.exec(c)),this.#e++,this.#t.add(c);let r=this.sanitize(c,{allow:["data"]}),{index:l}=o,[f,p]=[s.substring(0,l),s.substring(l+c.length)];r?s=`${f}${r}${p}`:s=`${f}${p}`}}return s}purify(e){if(!d(e))throw new TypeError(`Expected String but got ${y(e)}.`);let s=P.sanitize(decodeURIComponent(e));return s&&k.test(s)&&(s=this.replace(s)),s=s.replace(ee,"").replace(te,""),encodeURI(s)}sanitize(e,s={allow:[],deny:[],only:[]}){if(this.#e>R)throw this.#e=0,new Error("Data URLs nested too deeply.");let{allow:a,deny:i,only:o,remove:c}=s??{},r=new Map([["blob",!1],["data",!1],["file",!1],["javascrpt",!1],["vbscript",!1]]),l=!1;if(Array.isArray(o)&&o.length){let p=super.get();for(let m of p)r.set(m,!1);let n=Object.values(o);for(let m of n)if(d(m)&&(m=m.trim(),!D.test(m))){if(super.has(m))r.set(m,!0);else{try{super.add(m)}catch{}super.has(m)&&r.set(m,!0)}!l&&r.has(m)&&(l=r.get(m))}}else{if(Array.isArray(a)&&a.length){let p=Object.values(a);for(let n of p)if(d(n)&&(n=n.trim(),!D.test(n)))if(super.has(n))r.set(n,!0);else{try{super.add(n)}catch{}super.has(n)&&r.set(n,!0)}}if(Array.isArray(i)&&i.length){let p=Object.values(i);for(let n of p)d(n)&&(n=n.trim(),n&&r.set(n,!1))}}let f;if(super.verify(e)){let{hash:p,href:n,pathname:m,protocol:U,search:w}=new URL(e),E=U.replace(A,""),L=E.split("+"),_;if(l)_=L.every(b=>r.get(b));else for(let[b,x]of r.entries())if(_=x||E!==b&&L.every(h=>h!==b),!_)break;if(_){let b=L.includes("data"),x,h=n;if(b){let[v,...C]=m.split(","),$=`${C.join(",")}${w}${p}`,S=v.split(";"),O=S[S.length-1]==="base64",u=$;O&&(u=he($));try{let I=X(u).trim(),{protocol:Q}=new URL(I);Q.replace(A,"").split("+").some(J=>D.test(J))&&(h="")}catch{}let N=k.test(u);u!==$||N?N?u=this.replace(u):this.#t.has(e)?this.#t.delete(e):x=!0:this.#t.has(e)?this.#t.delete(e):x=!0,(!v||ie.test(v))&&(u=this.purify(u)),h&&u?(O&&u!==$&&S.pop(),h=`${E}:${S.join(";")},${u}`):h=""}else x=!0;if(!b&&c&&B.test(h)){let v=B.exec(h),{index:C}=v;h=h.substring(0,C)}h?(f=h.replace(se,G).replace(fe,Y),x&&(b||(f=f.replace(re,Y)),this.#e=0)):(f=h,this.#e=0)}}return f||null}parse(e,s){if(!d(e))throw new TypeError(`Expected String but got ${y(e)}.`);let a=this.sanitize(e,s??{allow:["blob","data","file"]}),i=new Map([["input",e]]);if(a){let o=new URL(a),{pathname:c,protocol:r}=o,f=r.replace(A,"").split("+").includes("data");if(i.set("valid",!0),f){let p=new Map,[n,...m]=c.split(","),U=`${m.join(",")}`,w=n.split(";"),E=w[w.length-1]==="base64";E&&w.pop(),p.set("mime",w.join(";")),p.set("base64",E),p.set("data",U),i.set("data",Object.fromEntries(p))}else i.set("data",null);for(let p in o){let n=o[p];d(n)&&i.set(p,n)}}else i.set("valid",!1);return Object.fromEntries(i)}},g=new M,ge=t=>g.verify(t),ye=async t=>g.verify(t),be=t=>g.parse(t),we=async t=>g.parse(t),Ee=(t,e)=>{let s;if(g.verify(t)){let{protocol:a}=new URL(t);a==="blob:"?URL.revokeObjectURL(t):s=g.sanitize(t,e??{allow:[],deny:[],only:[]})}return s||null},xe=async(t,e={allow:[],deny:[],only:[]})=>{let s;if(g.verify(t)){let{protocol:a}=new URL(t);if(a==="blob:"){let{allow:i,deny:o,only:c}=e;if(Array.isArray(i)&&i.includes("blob")&&!(Array.isArray(o)&&o.includes("blob"))||Array.isArray(c)&&c.includes("blob")){let r;try{r=await fetch(t).then(l=>l.blob()).then(ue)}catch{}if(r){if(Array.isArray(c))c.includes("data")||c.push("data");else if(Array.isArray(i)&&(i.includes("data")||i.push("data"),Array.isArray(o)&&o.includes("data"))){let l=o.indexOf("data");o.splice(l,1)}s=g.sanitize(r,e)}}URL.revokeObjectURL(t)}else s=g.sanitize(t,e)}return s||null};export{g as default,ye as isURI,ge as isURISync,we as parseURL,be as parseURLSync,xe as sanitizeURL,Ee as sanitizeURLSync};
/*!
 * URL Sanitizer
 *
 * @license MIT
 * @copyright asamuzaK (Kazz)
 * @see {@link https://github.com/asamuzaK/urlSanitizer/blob/main/LICENSE}
 */
//# sourceMappingURL=url-sanitizer-wo-dompurify.min.js.map
