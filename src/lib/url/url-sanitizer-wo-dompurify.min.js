var{DOMPurify:ne}=globalThis,Q=ne;var X=/^[\w+/=-]+$/;var A=/data:[\w#&+./;=-]*,/,D=/data:[\w#&+./;=^]*base64,[\w+/=-]+/i,Y=/data:[\w#&+./;=-]*,[^"]+/g,J=/&#(x(?:00)?[\dA-F]{2}|0?\d{1,3});?/gi,K=/^(?:application\/(?:[\w#&.;-]+\+)?x|image\/svg\+x|text\/(?:ht|x))ml;?/;var V=/^[a-z][\da-z+.-]*$/,W=/^(?:ext|web)\+[a-z]+$/,O=/(?:java|vb)script/,S=/(?:java|vb)script|blob/,j=/%(?:2[27]|3[CE])|[<>"']/,Z=/%(?:2[27]|3[CE])/g,ee=/[<>"'\s]/g,te=/^%[\dA-F]{2}$/i;var b=t=>Object.prototype.toString.call(t).slice(8,-1),d=t=>typeof t=="string"||t instanceof String;var M=[7,8,9,10,11,12,13,27,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255];var P=["aaa","aaas","about","acap","acct","acd","acr","adiumxtra","adt","afp","afs","aim","amss","android","appdata","apt","ar","ark","at","attachment","aw","barion","beshare","bitcoin","bitcoincash","blob","bolo","brid","browserext","cabal","calculator","callto","cap","cast","casts","chrome","chrome-extension","cid","coap","coaps","com-eventbrite-attendee","content","content-type","crid","cstr","cvs","dab","dat","data","dav","dhttp","diaspora","dict","did","dis","dlna-playcontainer","dlna-playsingle","dns","dntp","doi","dpp","drm","dtmi","dtn","dvb","dvx","dweb","ed2k","eid","elsi","embedded","ens","ethereum","example","facetime","feed","feedready","fido","file","finger","first-run-pen-experience","fish","fm","ftp","fuchsia-pkg","geo","gg","git","gitoid","gizmoproject","go","gopher","graph","gtalk","h323","ham","hcap","hcp","http","https","hxxp","hxxps","hydrazone","hyper","iax","icap","icon","im","imap","info","iotdisco","ipfs","ipn","ipns","ipp","ipps","irc","irc6","ircs","iris","iris.beep","iris.lwz","iris.xpc","iris.xpcs","isostore","itms","jabber","jar","jms","keyparc","lastfm","lbry","ldap","ldaps","leaptofrogans","lid","lorawan","lpa","lvlt","magnet","mailto","maps","market","matrix","message","microsoft.windows.camera","microsoft.windows.camera.multipicker","microsoft.windows.camera.picker","mid","mms","mongodb","moz","moz-extension","ms-access","ms-appinstaller","ms-browser-extension","ms-calculator","ms-drive-to","ms-enrollment","ms-excel","ms-eyecontrolspeech","ms-gamebarservices","ms-gamingoverlay","ms-getoffice","ms-help","ms-infopath","ms-inputapp","ms-launchremotedesktop","ms-lockscreencomponent-config","ms-media-stream-id","ms-meetnow","ms-mixedrealitycapture","ms-mobileplans","ms-newsandinterests","ms-officeapp","ms-people","ms-powerpoint","ms-project","ms-publisher","ms-remotedesktop","ms-remotedesktop-launch","ms-restoretabcompanion","ms-screenclip","ms-screensketch","ms-search","ms-search-repair","ms-secondary-screen-controller","ms-secondary-screen-setup","ms-settings","ms-settings-airplanemode","ms-settings-bluetooth","ms-settings-camera","ms-settings-cellular","ms-settings-cloudstorage","ms-settings-connectabledevices","ms-settings-displays-topology","ms-settings-emailandaccounts","ms-settings-language","ms-settings-location","ms-settings-lock","ms-settings-nfctransactions","ms-settings-notifications","ms-settings-power","ms-settings-privacy","ms-settings-proximity","ms-settings-screenrotation","ms-settings-wifi","ms-settings-workplace","ms-spd","ms-stickers","ms-sttoverlay","ms-transit-to","ms-useractivityset","ms-virtualtouchpad","ms-visio","ms-walk-to","ms-whiteboard","ms-whiteboard-cmd","ms-word","msnim","msrp","msrps","mss","mt","mtqp","mumble","mupdate","mvn","news","nfs","ni","nih","nntp","notes","num","ocf","oid","onenote","onenote-cmd","opaquelocktoken","openid","openpgp4fpr","otpauth","palm","paparazzi","payment","payto","pkcs11","platform","pop","pres","proxy","psyc","pttp","pwid","qb","query","quic-transport","redis","rediss","reload","res","resource","rmi","rsync","rtmfp","rtmp","rtsp","rtsps","rtspu","sarif","secondlife","secret-token","service","session","sftp","sgn","shc","sieve","simpleledger","simplex","sip","sips","skype","smb","smp","sms","smtp","snmp","soap.beep","soap.beeps","soldat","spiffe","spotify","ssb","ssh","starknet","steam","stun","stuns","submit","svn","swh","swid","swidpath","tag","taler","teamspeak","tel","teliaeid","telnet","tftp","things","thismessage","tip","tn3270","tool","turn","turns","tv","udp","unreal","urn","ut2004","uuid-in-package","v-event","vemmi","ventrilo","ves","view-source","vnc","vscode","vscode-insiders","vsls","w3","wcr","web3","webcal","wifi","ws","wss","wtai","wyciwyg","xcon","xcon-userid","xfire","xmlrpc.beep","xmlrpc.beeps","xmpp","xri","ymsgr","z39.50r","z39.50s"];var{FileReader:se}=globalThis;var G=t=>{if(!d(t))throw new TypeError(`Expected String but got ${b(t)}.`);let e=[];for(let s of t)e.push(`%${s.charCodeAt(0).toString(16).toUpperCase()}`);return e.join("")},I=t=>{d(t)&&te.test(t)&&(t=t.toUpperCase());let[e,s,r,i,o,n]=["&","#","<",">",'"',"'"].map(G),a;return t===e?a=`${e}amp;`:t===r?a=`${e}lt;`:t===i?a=`${e}gt;`:t===o?a=`${e}quot;`:t===n?a=`${e}${s}39;`:a=t,a},re=t=>{if(d(t)){if(!X.test(t))throw new Error(`Invalid base64 data: ${t}`)}else throw new TypeError(`Expected String but got ${b(t)}.`);let e=atob(t),s=Uint8Array.from([...e].map(o=>o.charCodeAt(0))),r=new Set(M),i;return s.every(o=>r.has(o))?i=e.replace(/\s/g,G):i=t,i},B=(t,e=0)=>{if(!d(t))throw new TypeError(`Expected String but got ${b(t)}.`);if(Number.isInteger(e)){if(e>16)throw new Error("Character references nested too deeply.")}else throw new TypeError(`Expected Number but got ${b(e)}.`);let s=decodeURIComponent(t);if(/&#/.test(s)){let r=new Set(M),i=[...s.matchAll(J)].reverse();for(let o of i){let[n,a]=o,p;if(/^x[\dA-F]+/i.test(a)?p=parseInt(`0${a}`,16):/^\d+/.test(a)&&(p=parseInt(a)),Number.isInteger(p)){let{index:u}=o,[l,f]=[s.substring(0,u),s.substring(u+n.length)];r.has(p)?(s=`${l}${String.fromCharCode(p)}${f}`,(/#x?$/.test(l)||/^#(?:x(?:00)?[2-7]|\d)/.test(f))&&(s=B(s,++e))):p<16*16&&(s=`${l}${f}`)}}}return s},ie=t=>new Promise((e,s)=>{let r=new se;r.addEventListener("error",()=>s(r.error)),r.addEventListener("abort",()=>e(r.result)),r.addEventListener("load",()=>e(r.result)),r.readAsDataURL(t)}),L=class{#e;constructor(){this.#e=new Set(P)}get(){return[...this.#e]}has(e){return this.#e.has(e)}add(e){if(d(e)){if(O.test(e)||!V.test(e))throw new Error(`Invalid scheme: ${e}`)}else throw new TypeError(`Expected String but got ${b(e)}.`);return this.#e.add(e),[...this.#e]}remove(e){return this.#e.delete(e)}verify(e){let s;if(d(e))try{let{protocol:r}=new URL(e),i=r.replace(/:$/,""),o=i.split("+");s=!O.test(i)&&W.test(i)||o.every(n=>this.#e.has(n))}catch{s=!1}return!!s}reset(){this.#e.clear();for(let e of P)this.#e.add(e)}};var N=class extends L{#e;#t;constructor(){super(),this.#e=0,this.#t=new Set}replace(e){if(!d(e))throw new TypeError(`Expected String but got ${b(e)}.`);let s=e;if(A.test(s)){let i=[...s.matchAll(Y)].reverse();for(let o of i){let[n]=o;D.test(n)&&([n]=D.exec(n)),this.#e++,this.#t.add(n);let a=this.sanitize(n,{allow:["data"]}),{index:p}=o,[u,l]=[s.substring(0,p),s.substring(p+n.length)];a?s=`${u}${a}${l}`:s=`${u}${l}`}}return s}purify(e){if(!d(e))throw new TypeError(`Expected String but got ${b(e)}.`);let s=Q.sanitize(decodeURIComponent(e));return s&&A.test(s)&&(s=this.replace(s)),s=s.replace(/(?:#|%23)$/,"").replace(/(?<!(?:#|%23).*)(?:\?|%3F)$/,""),encodeURI(s)}sanitize(e,s){if(this.#e>16)throw this.#e=0,new Error("Data URLs nested too deeply.");let{allow:r,deny:i,only:o,remove:n}=s??{},a=new Map([["blob",!1],["data",!1],["file",!1],["javascrpt",!1],["vbscript",!1]]),p=new Set,u=!1;if(Array.isArray(o)&&o.length){let f=super.get();for(let m of f)a.set(m,!1);let c=Object.values(o);for(let m of c)if(d(m)&&(m=m.trim(),!S.test(m))){if(super.has(m))a.set(m,!0);else{try{super.add(m)}catch{}super.has(m)&&(a.set(m,!0),p.add(m))}!u&&a.has(m)&&(u=a.get(m))}}else{if(Array.isArray(r)&&r.length){let f=Object.values(r);for(let c of f)if(d(c)&&(c=c.trim(),!S.test(c)))if(super.has(c))a.set(c,!0);else{try{super.add(c)}catch{}super.has(c)&&(a.set(c,!0),p.add(c))}}if(Array.isArray(i)&&i.length){let f=Object.values(i);for(let c of f)d(c)&&(c=c.trim(),c&&a.set(c,!1))}}let l;if(super.verify(e)){let{hash:f,href:c,pathname:m,protocol:x,search:U}=new URL(e),C=x.replace(/:$/,""),k=C.split("+"),v;if(u)v=k.every(y=>a.get(y));else for(let[y,R]of a.entries())if(v=R||C!==y&&k.every(h=>h!==y),!v)break;if(v){let y=k.includes("data"),R,h=c;if(y){let[_,...z]=m.split(","),T=`${z.join(",")}${U}${f}`,$=_.split(";"),F=$[$.length-1]==="base64",g=T;F&&(g=re(T));try{let q=B(g).trim(),{protocol:ae}=new URL(q);ae.replace(/:$/,"").split("+").some(oe=>S.test(oe))&&(h="")}catch{}let H=A.test(g);g!==T||H?H?g=this.replace(g):this.#t.has(e)?this.#t.delete(e):R=!0:this.#t.has(e)?this.#t.delete(e):R=!0,(!_||K.test(_))&&(g=this.purify(g)),h&&g?(F&&g!==T&&$.pop(),h=`${C}:${$.join(";")},${g}`):h=""}else R=!0;if(!y&&n&&j.test(h)){let _=j.exec(h),{index:z}=_;h=h.substring(0,z)}h?(l=h.replace(ee,G).replace(/%26/g,I),R&&(y||(l=l.replace(Z,I)),this.#e=0)):this.#e=0}p.size&&p.forEach(y=>{super.remove(y)})}return l||null}parse(e,s){if(!d(e))throw new TypeError(`Expected String but got ${b(e)}.`);let r=new Map([["input",e]]),i;if(this.verify(e)){let{protocol:o}=new URL(e);o==="blob:"?i=e:i=this.sanitize(e,s??{allow:["data","file"]})}if(i){let o=new URL(i),{pathname:n,protocol:a}=o,u=a.replace(/:$/,"").split("+").includes("data");if(r.set("valid",!0),u){let l=new Map,[f,...c]=n.split(","),m=`${c.join(",")}`,x=f.split(";"),U=x[x.length-1]==="base64";U&&x.pop(),l.set("mime",x.join(";")),l.set("base64",U),l.set("data",m),r.set("data",Object.fromEntries(l))}else r.set("data",null);for(let l in o){let f=o[l];d(f)&&r.set(l,f)}}else r.set("valid",!1);return Object.fromEntries(r)}reset(){super.reset(),this.#e=0,this.#t.clear()}},w=new N,de=async(t,e={allow:[],deny:[],only:[]})=>{let s;if(t&&d(t)){let r;try{let{protocol:i}=new URL(t);r=i.replace(/:$/,"")}catch{}if(r==="blob"){let{allow:i,deny:o,only:n}=e;if(Array.isArray(i)&&i.includes("blob")&&!(Array.isArray(o)&&o.includes("blob"))||Array.isArray(n)&&n.includes("blob")){let a;try{a=await fetch(t).then(p=>p.blob()).then(ie)}catch{}if(a){if(Array.isArray(n))n.includes("data")||n.push("data");else if(Array.isArray(i)&&(i.includes("data")||i.push("data"),Array.isArray(o)&&o.includes("data"))){let p=o.indexOf("data");o.splice(p,1)}s=w.sanitize(a,e)}}URL.revokeObjectURL(t)}else r&&(s=w.sanitize(t,e))}return s||null},fe=(t,e)=>{let s;if(t&&d(t)){let r;try{let{protocol:i}=new URL(t);r=i.replace(/:$/,"")}catch{}r==="blob"?URL.revokeObjectURL(t):r&&(s=w.sanitize(t,e))}return s||null},he=async t=>w.parse(t),ue=t=>w.parse(t),ge=async t=>w.verify(t),ye=t=>w.verify(t),be=w;export{be as default,ge as isURI,ye as isURISync,he as parseURL,ue as parseURLSync,de as sanitizeURL,fe as sanitizeURLSync};
/*!
 * URL Sanitizer
 *
 * @license MIT
 * @copyright asamuzaK (Kazz)
 * @see {@link https://github.com/asamuzaK/urlSanitizer/blob/main/LICENSE}
 */
//# sourceMappingURL=url-sanitizer-wo-dompurify.min.js.map
